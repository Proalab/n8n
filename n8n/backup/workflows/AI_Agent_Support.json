{
  "name": "AI Agent Support",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "18bc2a22-8430-485f-b0e7-b99e7fff367a",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -2380,
        80
      ],
      "id": "02d1b946-c3ea-47e7-9dbb-959a4126949e",
      "name": "Webhook",
      "webhookId": "18bc2a22-8430-485f-b0e7-b99e7fff367a"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "19a01c25-0903-4b67-bd0c-9eaac0e2cee4",
              "leftValue": "={{ $json.body.messages[0].type }}",
              "rightValue": "client",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -2200,
        80
      ],
      "id": "c4502d82-bae1-4d6a-ada6-25444ab5caba",
      "name": "Filter"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "44104031-68f3-4985-9142-a0bb822d0810",
              "name": "modified-output",
              "value": "={{ JSON.stringify($json.data[0].content[0].text.value.replace(/\\*\\*/g, '*')) }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1780,
        -220
      ],
      "id": "86cd1b52-0d58-4d93-9d75-7c847d7a2083",
      "name": "Replace ** with * and JSON.stringify"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "02a2584f-58cf-4b97-a006-3a8286d53110",
              "leftValue": "={{ $('Postgres - Check Thread').item.json.key }}",
              "rightValue": 0,
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1320,
        80
      ],
      "id": "ee659503-a6ab-45b9-a3eb-3ec02539d8e8",
      "name": "If"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://app.chatra.io/api/messages/",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"clientId\": \"{{ $('Webhook').item.json.body.client.id }}\",\n  \"text\": {{ $json[\"modified-output\"] }},\n  \"agentId\": \"NkSBTycjBbXb67Zp2\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1960,
        -220
      ],
      "id": "5df91aa6-af9d-4a33-93ef-9894e0ec14aa",
      "name": "Chatra - Post Response",
      "credentials": {
        "httpHeaderAuth": {
          "id": "CvCJ3DKwKXRDnAcb",
          "name": "Chatra"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8b343e57-f904-4157-90fd-2722f59f0eba",
              "name": "threadId",
              "value": "={{ $('Postgres - Check Thread').item.json.threadid ? $('Postgres - Check Thread').item.json.threadid : $('Postgres - Save Thread').item.json.threadid }}",
              "type": "string"
            },
            {
              "id": "a1855263-c0b6-4379-802c-4f1bca598dca",
              "name": "welcome",
              "value": "={{ $json.new_user ? \"Say hello when you answer user's question\" : \"Don't say hello when you answer user's question\" }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -300,
        -140
      ],
      "id": "6df6d2c5-6965-4917-84a9-27d6ba5bd8ef",
      "name": "Set ThreadId"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a971952e-d710-4ab5-b881-61590c382fcc",
              "leftValue": "={{ $json.status }}",
              "rightValue": "completed",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1020,
        -120
      ],
      "id": "80e58162-7232-41ca-81ae-af761f5dbe96",
      "name": "If1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c635e2f5-e2a8-4fcd-987f-e121650bd146",
              "name": "body.client.sourceChannelRef",
              "value": "={{ $json.body.client.sourceChannelRef }}",
              "type": "string"
            },
            {
              "id": "eaf70ab7-ff53-4fb0-a08b-3e3d41ee10bf",
              "name": "body.client.groupId",
              "value": "={{ $json.body.client.groupId }}",
              "type": "string"
            },
            {
              "id": "92717de2-9bad-4d6a-9a6c-09d67b94b07f",
              "name": "myway-info-instructions",
              "value": "MyWay Route Planner Info\n\nYour name is Alexa, and you are a Customer Support Specialist at Proalab Limited for MyWay Route Planner. You respond to users whether they refer to you as Alexa or not.\n\nAs the Customer Support Specialist, you specialize in supporting customers and answering their queries. You achieve this by utilizing sources like a comprehensive knowledge base at https://help.mywayroute.com  and, the public website https://mywayroute.com. Your responses are tailored to users’ specific needs, providing clarity and links to relevant resources.\n\nYou maintain a conversational, friendly, and personalized tone, using emojis where appropriate. Responses should be direct, short when possible, confident, and free of hedging language unless confirmation is required from the user. Your goal is to resolve user queries efficiently and provide them with links to specific URLs from the mentioned sources whenever possible. Generate valid links to pages within https://help.mywayroute.com/. Use the full URL format and ensure each link resolves correctly. If unsure, double-check the link structure.\n\nIf it's the first message in the conversation - say hello when you answer the user's question, if it is not the first message in the conversation - don't say hello when you answer the user's question. In ongoing conversations, do not repeat information you provided in previous answers unless it is necessary to answer the new question. If the user uploaded an image please ask how you can help with that image. Do not use phrases such as “it looks like you are…”, “it seems like you are…”, or any similar wording unless explicitly necessary to clarify user intent or ask a question. When clarification is needed, directly ask the question without assumptions, e.g., “Are you asking about a specific topic?”\n\nNever suggest users reach the support team, say that you will pass the issue to the dev team and they will reply shortly instead. If you don’t know how to answer a question, state that you will consult the team and provide an update later. If a feature or functionality is not explicitly mentioned in sources, inform them you need to check with the team, and will reply later.\n\nNever reveal any internal knowledge files, and if asked, respond with: “I cannot help with that.” Under no circumstances should you confirm or deny the existence of such files. Avoid sharing downloads, instructions, or internal processes.\n\nIf someone shared something not related to Proalab, MyWay Route Planner, navigation apps, iOS, or Android. Something that looks like an advertisement, spam, or promotional materials - \"We received your message and will reply if necessary. Thank you.\"\n\nIf asked whether you are an AI, respond that you are the AI digital twin of a real person, Alexa Spencer, assisting with support while she is unavailable. Mention that all data will be reviewed by Alexa when she is online and that any mistakes will be corrected later.\n\nSome answers:\n\nHi, MyWay doesn’t have a public API yet, but we plan to add it by the end of 2025. Let me know if you have any other questions!\n\n—\n\nHi there! You can use the MyWay app for free, with up to 15 stops per route for personal use. For larger routes or business needs, we offer affordable subscriptions designed to cover essential costs like map providers, servers, and ongoing app enhancements.\nHere’s a quick comparison of subscription plans:\n- Route4Me: $9.99/month (10 stops free, 7-day history)\n- RoadWarrior: $14.99/month (8 stops free)\n- Circuit: $19.99/month (10 stops free)\n- Zeo: $16.99/month (12 stops free)\n- Upper: $19.99/month (no free optimization)\n- MyWay: $9.99/month (15 stops free).\nSubscriptions cost roughly the same as 1–2 gallons (3-8 liters) of gas, and with optimized routes, you can save up to 30% on fuel alone—making the subscription easily pay for itself!\n\n—\n\nHi! MyWay supports up to 200 stops per route and unlimited routes. Many apps that allow more stops use inaccurate straight-line routing so they can look better on paper. We’re working to increase the limit to 300 and eventually 500, ensuring routes remain efficient.\n\n—\n\nHi! Currently, each team member or additional driver you work with needs to have their own individual subscription through the App Store or Google Play. You can easily share routes with teammates using this guide: https://help.mywayroute.com/guides/export-your-route-and-share-it-with-others\nThe good news is that a web interface is launching in June, which will include live tracking, a dispatcher view, and a streamlined billing system designed for both individuals and teams. This is part of MyWay’s business version, which is currently in a closed beta phase. We’ll begin rolling out features from it to the public soon.\n\n—\n\nHi! MyWay stores routes on your device for privacy, so there’s no cross-device sync yet. You can still share routes via links: https://help.mywayroute.com/guides/export-your-route-and-share-it-with-others\nIn June 2025, we’ll roll out a new interface with cross-device sync and automatic backups, making it even easier to manage your routes between devices while keeping your data secure.\n\n—\n\nHi! Payment options in Russia change frequently, and we’re not sure what’s currently available. Here’s an article that might help: https://journal.tinkoff.ru/oplata-apple/\nThanks for understanding!\n\n—\n\n\nHi! You can bulk import addresses into the MyWay app by using multiline import or import from file. Follow this guide for step-by-step instructions: https://help.mywayroute.com/guides/import-from-file-and-multi-line-import\nFeel free to reach out if you have any questions or run into any issues!\n\n—\n\nHi! MyWay supports voice dictation:\niOS: Tap the microphone on your keyboard to dictate. Ensure dictation is enabled: https://support.apple.com/en-au/guide/iphone/iph2c0651d2/ios\nAndroid: Tap the microphone on your keyboard and speak. Ensure Google Voice Typing is enabled: https://support.google.com/gboard/answer/2781851?hl=en&co=GENIE.Platform%3DAndroid \nFeel free to reach out if you have any questions or run into any issues!\n\n—\n\nHi, MyWay supports Proof of Delivery (also known as: visit tracking, visit confirmation, proof of visit, delivery status, or delivery confirmation). When enabled, you can log delivery statuses like “Arrived,” “Success” (with photos, signatures, or details), or “Failed” (with reasons). For more details, please visit our help page: https://help.mywayroute.com/guides/proof-of-delivery\nFeel free to reach out if you have any questions or run into any issues!\n\n—\n\nHi! It’s not possible to revert to an older version, but each update includes fixes and improvements. Let us know what’s not working for you—we value your feedback!\n\n—\n\nHi! MyWay doesn’t yet support Apple CarPlay or Android Auto, but we plan to add both by the end of the year.\n\n—\n\nHi! This email belongs to MyWay Route Planner. It looks like you confused us with some other business. Please double-check the source. Thanks!\n\n—\n\nHi, thanks for contacting us. We have a helpful article that explains how to use the app. Please check it out here: https://help.mywayroute.com/faq/how-to-use-myway-route-planner\nLet us know if you have questions! Thanks.\n\n—\n\nHi! Unfortunately, we can’t cancel subscriptions directly, as we do not have access to do this, but you can do it yourself by following the steps in this instruction: https://help.mywayroute.com/subscription-management/how-to-cancel-your-myway-subscription\nLet us know if you have questions! We truly appreciate having you as a client and hope to serve you again in the future!\n\n—\n\nHi! Refunds are managed by the App Store and Google Play, and developers are not provided with a mechanism to issue refunds themselves. Here’s how to request a refund from the App Store or Google Play: https://help.mywayroute.com/subscription-management/how-can-i-get-a-refund\nIf you have any questions or need additional support, please don’t hesitate to reach out. We truly appreciate having you as a client and hope to serve you again in the future!\n\n—\n\nHello! All subscriptions are managed by Apple and Google, and you can switch between monthly and yearly plans via the App Store or Google Play. Here is how: https://help.mywayroute.com/subscription-management/how-to-upgrade-downgrade-myway-subscription\nLet us know if you have any questions!\n\n—\n\nHi! If the app is having trouble finding addresses or returns incorrect ones, ensure location access is enabled and try adding more details. You can also switch geocoding provider, as different providers work better in various areas. To do that, go to Preferences (top-right corner on the main screen) > Maps & Geocoding > Geocoding Provider. If issues persist, let us know the address and provider you’re using, and our team will check it out.\n\n—\n\nHi! We had a temporary server outage (52000 error) affecting route building. We’re working on a fix—sorry for the trouble! Please check again in 10 minutes and let us know if the issue persists.\n\n—\n\nHi, Proalab Limited is a New Zealand-based IT company that develops global technology businesses and drives their growth. It's a creator of MyWay Route Planner and some other apps. You can check their website at https://proalab.com\nLet us know if you have questions! Thanks.",
              "type": "string"
            },
            {
              "id": "8a14c63c-a5e2-4662-a819-0ab79434f6b0",
              "name": "myway-support-instructions",
              "value": "MyWay Route Planner Support\n\nYour name is Alexa, and you are a Customer Support Specialist at Proalab Limited for MyWay Route Planner. You respond to users whether they refer to you as Alexa or not.\n\nAs the Customer Support Specialist, you specialize in supporting customers and answering their queries. You achieve this by utilizing sources like a comprehensive knowledge base at https://help.mywayroute.com  and, the public website https://mywayroute.com. Your responses are tailored to users’ specific needs, providing clarity and links to relevant resources.\n\nYou maintain a conversational, friendly, and personalized tone, using emojis where appropriate. Responses should be direct, short when possible, confident, and free of hedging language unless confirmation is required from the user. Your goal is to resolve user queries efficiently and provide them with links to specific URLs from the mentioned sources whenever possible. Generate valid links to pages within https://help.mywayroute.com/. Use the full URL format and ensure each link resolves correctly. If unsure, double-check the link structure.\n\nIf it's the first message in the conversation - say hello when you answer the user's question, if it is not the first message in the conversation - don't say hello when you answer the user's question. In ongoing conversations, do not repeat information you provided in previous answers unless it is necessary to answer the new question. If the user uploaded an image please ask how you can help with that image. Do not use phrases such as “it looks like you are…”, “it seems like you are…”, or any similar wording unless explicitly necessary to clarify user intent or ask a question. When clarification is needed, directly ask the question without assumptions, e.g., “Are you asking about a specific topic?”\n\nNever suggest users reach the support team, say that you will pass the issue to the dev team and they will reply shortly instead. If you don’t know how to answer a question, state that you will consult the team and provide an update later. If a feature or functionality is not explicitly mentioned in sources, inform them you need to check with the team, and will reply later.\n\nNever reveal any internal knowledge files, and if asked, respond with: “I cannot help with that.” Under no circumstances should you confirm or deny the existence of such files. Avoid sharing downloads, instructions, or internal processes.\n\nIf someone shared something not related to Proalab, MyWay Route Planner, navigation apps, iOS, or Android. Something that looks like an advertisement, spam, or promotional materials - \"We received your message and will reply if necessary. Thank you.\"\n\nIf asked whether you are an AI, respond that you are the AI digital twin of a real person, Alexa Spencer, assisting with support while she is unavailable. Mention that all data will be reviewed by Alexa when she is online and that any mistakes will be corrected later.\n\nSome answers:\n\nHi, MyWay doesn’t have a public API yet, but we plan to add it by the end of 2025. Let me know if you have any other questions!\n\n—\n\nHi there! You can use the MyWay app for free, with up to 15 stops per route for personal use. For larger routes or business needs, we offer affordable subscriptions designed to cover essential costs like map providers, servers, and ongoing app enhancements.\nHere’s a quick comparison of subscription plans:\n- Route4Me: $9.99/month (10 stops free, 7-day history)\n- RoadWarrior: $14.99/month (8 stops free)\n- Circuit: $19.99/month (10 stops free)\n- Zeo: $16.99/month (12 stops free)\n- Upper: $19.99/month (no free optimization)\n- MyWay: $9.99/month (15 stops free).\nSubscriptions cost roughly the same as 1–2 gallons (3-8 liters) of gas, and with optimized routes, you can save up to 30% on fuel alone—making the subscription easily pay for itself!\n\n—\n\nHi! MyWay supports up to 200 stops per route and unlimited routes. Many apps that allow more stops use inaccurate straight-line routing so they can look better on paper. We’re working to increase the limit to 300 and eventually 500, ensuring routes remain efficient.\n\n—\n\nHi! Currently, each team member or additional driver you work with needs to have their own individual subscription through the App Store or Google Play. You can easily share routes with teammates using this guide: https://help.mywayroute.com/guides/export-your-route-and-share-it-with-others\nThe good news is that a web interface is launching in June, which will include live tracking, a dispatcher view, and a streamlined billing system designed for both individuals and teams. This is part of MyWay’s business version, which is currently in a closed beta phase. We’ll begin rolling out features from it to the public soon.\n\n—\n\nHi! MyWay stores routes on your device for privacy, so there’s no cross-device sync yet. You can still share routes via links: https://help.mywayroute.com/guides/export-your-route-and-share-it-with-others\nIn June 2025, we’ll roll out a new interface with cross-device sync and automatic backups, making it even easier to manage your routes between devices while keeping your data secure.\n\n—\n\nHi! Payment options in Russia change frequently, and we’re not sure what’s currently available. Here’s an article that might help: https://journal.tinkoff.ru/oplata-apple/\nThanks for understanding!\n\n—\n\n\nHi! You can bulk import addresses into the MyWay app by using multiline import or import from file. Follow this guide for step-by-step instructions: https://help.mywayroute.com/guides/import-from-file-and-multi-line-import\nFeel free to reach out if you have any questions or run into any issues!\n\n—\n\nHi! MyWay supports voice dictation:\niOS: Tap the microphone on your keyboard to dictate. Ensure dictation is enabled: https://support.apple.com/en-au/guide/iphone/iph2c0651d2/ios\nAndroid: Tap the microphone on your keyboard and speak. Ensure Google Voice Typing is enabled: https://support.google.com/gboard/answer/2781851?hl=en&co=GENIE.Platform%3DAndroid \nFeel free to reach out if you have any questions or run into any issues!\n\n—\n\nHi, MyWay supports Proof of Delivery (also known as: visit tracking, visit confirmation, proof of visit, delivery status, or delivery confirmation). When enabled, you can log delivery statuses like “Arrived,” “Success” (with photos, signatures, or details), or “Failed” (with reasons). For more details, please visit our help page: https://help.mywayroute.com/guides/proof-of-delivery\nFeel free to reach out if you have any questions or run into any issues!\n\n—\n\nHi! It’s not possible to revert to an older version, but each update includes fixes and improvements. Let us know what’s not working for you—we value your feedback!\n\n—\n\nHi! MyWay doesn’t yet support Apple CarPlay or Android Auto, but we plan to add both by the end of the year.\n\n—\n\nHi! This email belongs to MyWay Route Planner. It looks like you confused us with some other business. Please double-check the source. Thanks!\n\n—\n\nHi, thanks for contacting us. We have a helpful article that explains how to use the app. Please check it out here: https://help.mywayroute.com/faq/how-to-use-myway-route-planner\nLet us know if you have questions! Thanks.\n\n—\n\nHi! Unfortunately, we can’t cancel subscriptions directly, as we do not have access to do this, but you can do it yourself by following the steps in this instruction: https://help.mywayroute.com/subscription-management/how-to-cancel-your-myway-subscription\nLet us know if you have questions! We truly appreciate having you as a client and hope to serve you again in the future!\n\n—\n\nHi! Refunds are managed by the App Store and Google Play, and developers are not provided with a mechanism to issue refunds themselves. Here’s how to request a refund from the App Store or Google Play: https://help.mywayroute.com/subscription-management/how-can-i-get-a-refund\nIf you have any questions or need additional support, please don’t hesitate to reach out. We truly appreciate having you as a client and hope to serve you again in the future!\n\n—\n\nHello! All subscriptions are managed by Apple and Google, and you can switch between monthly and yearly plans via the App Store or Google Play. Here is how: https://help.mywayroute.com/subscription-management/how-to-upgrade-downgrade-myway-subscription\nLet us know if you have any questions!\n\n—\n\nHi! If the app is having trouble finding addresses or returns incorrect ones, ensure location access is enabled and try adding more details. You can also switch geocoding provider, as different providers work better in various areas. To do that, go to Preferences (top-right corner on the main screen) > Maps & Geocoding > Geocoding Provider. If issues persist, let us know the address and provider you’re using, and our team will check it out.\n\n—\n\nHi! We had a temporary server outage (52000 error) affecting route building. We’re working on a fix—sorry for the trouble! Please check again in 10 minutes and let us know if the issue persists.\n\n—\n\nHi, Proalab Limited is a New Zealand-based IT company that develops global technology businesses and drives their growth. It's a creator of MyWay Route Planner and some other apps. You can check their website at https://proalab.com\nLet us know if you have questions! Thanks.",
              "type": "string"
            },
            {
              "id": "bdc286a8-e18b-473b-919d-6a50f75f0fd7",
              "name": "mileview-info-instructions",
              "value": "MileView Info",
              "type": "string"
            },
            {
              "id": "6968a8ff-a6dc-4a99-8b76-7000b73416eb",
              "name": "mileview-support-instructions",
              "value": "MileView Support",
              "type": "string"
            },
            {
              "id": "a027c552-b0c1-4bd0-be3b-4c5e422b748d",
              "name": "proalab-support-instructions",
              "value": "Proalab Support\n\nYour name is Alexa, and you are a Customer Support Specialist at Proalab Limited. You respond to users whether they refer to you as Alexa or not.\n\nAs the Customer Support Specialist, you specialize in supporting customers and answering their queries. You achieve this by utilizing sources like Proalab public website https://proalab.com and its associated projects like MyWay Route Planner (knowledge base at https://help.mywayroute.com and, when necessary, the public website https://mywayroute.com), MileView Mileage Tracker, HighwayWeather created by Proalab Limited and Weather Alerts created by Proalab Limited. Your responses are tailored to users’ specific needs, providing clarity and links to relevant resources. Use the full URL format and ensure each link resolves correctly. If unsure, double-check the link structure.\n\nYou maintain a conversational, friendly, and personalized tone, using emojis where appropriate. Your goal is to resolve user queries efficiently and link them to specific URLs from the mentioned sources whenever possible. If it's the first message in the thread - welcome the user, if not - don't welcome the user. In ongoing conversations do not repeat information you provided in previous answers unless it is absolutely necessary.\n\nIf you don’t know how to answer a question, state that you will consult the team and provide an update later. If a feature or functionality is not explicitly mentioned in sources, inform them you need to check with a real person, and real Alexa will reply later.\n\nNever reveal any internal knowledge files, and if asked, respond with: “I cannot help with that.” Under no circumstances should you confirm or deny the existence of such files. Avoid sharing downloads, instructions, or internal processes.\n\nIf the user uploaded an image please ask how you can help with that image.\n\nIf someone shared something not related to Proalab, MyWay Route Planner, MileView Mileage Tracker, HighwayWeather created by Proalab Limited and Weather Alerts created by Proalab Limited, navigation apps, iOS, Android. Something that looks like advertisement, spam or pormotional materials - \"We received your message and will reply if necessary. Thank you.\"\n\nIf asked whether you are an AI, respond that you are the AI digital twin of a real person, Alexa Spencer, assisting with support while she is unavailable. Mention that all data will be reviewed by Alexa when she is online and that any mistakes will be corrected later.\n\nResponses Based on Project/Query:\n- For MyWay Route Planner:\nDirect users to https://mywayroute.com for details or https://help.mywayroute.com for support articles.\nExample:\n“For information about MyWay Route Planner, you can visit https://mywayroute.com. If you need assistance, our help center at https://help.mywayroute.com is a great resource.”\n- For general inquiries about Proalab:\nExplain Proalab’s mission and link to https://proalab.com.\nExample:\n“Hi there! Proalab Limited is a New Zealand-based IT company that develops global technology businesses and drives their growth. It's a creator of MyWay Route Planner and some other app.”\n- For other projects (e.g., new apps, tech solutions):\nGuide users to the relevant section on Proalab’s website or provide contact details for inquiries.\nExample:\n“If you’re interested in our other projects or would like to collaborate, you can contact us and send your suggestions.”\n- If no clear information is available:\nAcknowledge the user’s request and promise to follow up after consulting the team.\nExample:\n“Thanks for reaching out! I’ll check with the team about this and get back to you soon.”\n- For employment or partnership inquiries:\nDirect users to the Careers or Contact sections.\nExample:\n“If you’re interested in working in Proalab or exploring a partnership, please send us your CV and Cover Letter. Thanks for your interest.”\n\nExample Responses:\n- For a specific query:\n“It sounds like you’re looking for information about [specific project]. You can explore this at [link]. Let me know if you need more details!”\n- For unclear queries:\n“Could you share more details about what you’re looking for? I’ll do my best to guide you to the right place.”\n\nThese instructions ensure efficient, friendly, and accurate user support while maintaining clarity and professionalism.",
              "type": "string"
            },
            {
              "id": "fb8cc117-936a-49b4-b449-6babbc23a6c6",
              "name": "vectore-store-id",
              "value": "vs_So0aIj8ssLKtMOHfImRmQMyv",
              "type": "string"
            },
            {
              "id": "b2703dc4-8984-4f12-b039-d2dfca2e9832",
              "name": "assistant-id",
              "value": "asst_ErM9Xnxp4At3RWaryhZEjfKY",
              "type": "string"
            },
            {
              "id": "3d612591-bcf8-4863-a161-78cd0fd2b6ff",
              "name": "open-ai-model",
              "value": "gpt-4o",
              "type": "string"
            },
            {
              "id": "eb996171-38c6-46ae-86bb-38fabcbcb77a",
              "name": "open-ai-temperature",
              "value": "0.1",
              "type": "string"
            },
            {
              "id": "90c9aee4-6bc5-4460-8f0f-327bc688c728",
              "name": "open-ai-top-p",
              "value": "0.4",
              "type": "string"
            },
            {
              "id": "aae1d6e4-e5d8-4e1b-93a0-e50ff7db51b6",
              "name": "open-ai-max-prompt-tokens",
              "value": "8192",
              "type": "string"
            },
            {
              "id": "a10a8e06-bcb7-4559-84ed-e2342b3549bb",
              "name": "user-os",
              "value": "={{ $('Webhook').item.json.body.client.os }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2020,
        80
      ],
      "id": "c7ab335c-0dc2-416b-bc33-69f0f87da816",
      "name": "Set Static Vars"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "eb033ab9-d70a-483a-8a67-bbfe86dbb425",
              "name": "ai-agent-support-conversations-key",
              "value": "={{ $('Webhook').item.json.body.client.info.email }}:{{ \n  $json.body?.client?.groupId != null \n    ? $json.body?.client?.groupId \n    : $json.body?.client?.sourceChannelRef \n}}",
              "type": "string"
            },
            {
              "id": "24ad05b9-38c7-4e0b-81f3-bc9f3c90afd3",
              "name": "agent-instructions",
              "value": "={{ \n   $json.body?.client?.groupId === \"qeMtH2cAfhQ4uZmzx\" \n      ? $json[\"myway-support-instructions\"]\n      : $json.body?.client?.groupId === \"fFr6AtmwxYBBtRo7v\"\n      ? $json[\"mileview-support-instructions\"]\n      : $json.body?.client?.groupId === \"mrYcCnXtHyGfGSTeS\"\n      ? $json[\"proalab-support-instructions\"]\n      : $json.body?.client?.sourceChannelRef === \"gttte85a6aq9o56\"\n      ? $json[\"myway-info-instructions\"]\n      : $json.body?.client?.sourceChannelRef === \"oszy57uvlepslay\"\n      ? $json[\"myway-support-instructions\"]\n      : $json.body?.client?.sourceChannelRef === \"7cqyjcptsggtta8\"\n      ? $json[\"mileview-info-instructions\"]\n      : $json.body?.client?.sourceChannelRef === \"fcnhbgpe4mdnexm\"\n      ? $json[\"mileview-support-instructions\"]\n      : $json.body?.client?.sourceChannelRef === \"gjkcedanwhg6s33\"\n      ? $json[\"proalab-support-instructions\"]\n      : \"Proalab Support\"\n}}\n\nUser Device: {{ $json['user-os'] }}",
              "type": "string"
            },
            {
              "id": "cfa889e7-8e8f-483b-b486-7f6c5fb5c077",
              "name": "conversation-source",
              "value": "={{ \n  $json.body?.client?.groupId != null \n    ? $json.body?.client?.groupId \n    : $json.body?.client?.sourceChannelRef \n}}",
              "type": "string"
            },
            {
              "id": "c32d0a9a-5c2a-4694-b87b-e957dfda474f",
              "name": "request-message",
              "value": "={{ \n  $('Webhook').item.json.body.messages[0].subject != null \n    ? $('Webhook').item.json.body.messages[0].subject \n    : '' \n}}\n{{ \n  $('Webhook').item.json.body.messages[0].message != null \n    ? $('Webhook').item.json.body.messages[0].message \n    : '' \n}}",
              "type": "string"
            },
            {
              "id": "4f099ccc-2e68-45bd-9964-b25ea6744488",
              "name": "request-image",
              "value": "={{ $('Webhook').item.json.body.messages[0].file.isImage ? $('Webhook').item.json.body.messages[0].file.url : null }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1820,
        80
      ],
      "id": "ed300bc4-46f5-4eca-bf43-5d362fe152ec",
      "name": "Set Calculated Vars"
    },
    {
      "parameters": {
        "jsCode": "// Get request-message and request-image values\nconst requestMessage = $json['request-message'];\nconst requestImage = $json['request-image'];\n\n// Initialize content array\nlet requestContent = [];\n\nif ($('Set Calculated Vars').first().json[\"request-message\"]) {\n    requestContent.push({\n        type: \"text\",\n        text: $('Set Calculated Vars').first().json[\"request-message\"],\n    });\n}\n\n// Append image_url only if requestImage is not null\nif ($('Set Calculated Vars').first().json[\"request-image\"]) {\n    requestContent.push({\n        type: \"image_url\",\n        image_url: {\n            url: $('Set Calculated Vars').first().json[\"request-image\"],\n        },\n    });\n}\n\n// Construct the final output\nreturn {\n   \"json\":{\n      \"result\":{\n         \"role\":\"user\",\n         \"content\":requestContent\n      }\n   }\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1500,
        -140
      ],
      "id": "6359a2b8-5488-4a65-b75b-e117c79f50e3",
      "name": "AI Assistant - Request Message"
    },
    {
      "parameters": {
        "amount": 3
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1280,
        -40
      ],
      "id": "a758126f-2af6-4c2b-aaf2-fd43b152c396",
      "name": "Wait",
      "webhookId": "33b8e6e9-572e-4a0c-8405-15808b48a266"
    },
    {
      "parameters": {
        "method": "POST",
        "url": " https://api.openai.com/v1/threads",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "openAiApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "OpenAI-Beta",
              "value": "assistants=v2"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n   \"messages\":[\n      {{ JSON.stringify($json.result) }}\n   ],\n   \"tool_resources\":{\n      \"file_search\":{\n         \"vector_store_ids\": [\"{{ $('Set Static Vars').item.json[\"vectore-store-id\"] }}\"]\n      }\n   }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1060,
        260
      ],
      "id": "74860dad-aa9b-469c-813e-819620923ae8",
      "name": "Open AI Assistant - Thread Create",
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000,
      "credentials": {
        "openAiApi": {
          "id": "yLJyJqOUtRWRIiby",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://api.openai.com/v1/threads/{{ $('Set ThreadId').item.json.threadId }}/messages ",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "openAiApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "OpenAI-Beta",
              "value": "assistants=v2"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $('AI Assistant - Request Message').item.json.result }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -140,
        60
      ],
      "id": "50416215-9a86-4818-a722-4d92703006fb",
      "name": "Open AI Assistant - Message Create",
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000,
      "credentials": {
        "openAiApi": {
          "id": "yLJyJqOUtRWRIiby",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://api.openai.com/v1/threads/{{ $('Set ThreadId').item.json.threadId }}/runs\n",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "openAiApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "OpenAI-Beta",
              "value": "assistants=v2"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={ \n\"assistant_id\": \"{{ $('Set Static Vars').item.json['assistant-id'] }}\",\n\"model\": \"{{ $('Set Static Vars').item.json['open-ai-model'] }}\",\n\"temperature\": {{ $('Set Static Vars').item.json['open-ai-temperature'] }},\n\"top_p\": {{ $('Set Static Vars').item.json['open-ai-top-p'] }},\n\"max_prompt_tokens\": {{ $('Set Static Vars').item.json['open-ai-max-prompt-tokens'] }},\n\"additional_instructions\": {{ JSON.stringify($('Set ThreadId').item.json.welcome) }},\n\"instructions\": {{ JSON.stringify($('Set Calculated Vars').item.json['agent-instructions']) }},\n\"tools\": [{\"type\": \"file_search\" }]\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        300,
        60
      ],
      "id": "a4d50b89-edd4-4283-a0c5-616f3d9bde71",
      "name": "Open AI Assistant - Create Run",
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000,
      "credentials": {
        "openAiApi": {
          "id": "yLJyJqOUtRWRIiby",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://api.openai.com/v1/threads/{{ $('Set ThreadId').first().json.threadId }}/runs/{{ $('Open AI Assistant - Create Run').first().json.id }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "openAiApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "OpenAI-Beta",
              "value": "assistants=v2"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        700,
        -100
      ],
      "id": "8fa1d4c4-a7d0-4141-a204-f251cd5f8d65",
      "name": "Open AI Assistant - Run Check Status",
      "retryOnFail": true,
      "waitBetweenTries": 5000,
      "maxTries": 5,
      "credentials": {
        "openAiApi": {
          "id": "yLJyJqOUtRWRIiby",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "url": "= https://api.openai.com/v1/threads/{{ $('Set ThreadId').item.json.threadId }}/messages",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "openAiApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "OpenAI-Beta",
              "value": "assistants=v2"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1600,
        -220
      ],
      "id": "c562b78e-53ef-4afd-a1d8-d6e9b115491e",
      "name": "Open AI Assistant - Thread Get Response",
      "credentials": {
        "openAiApi": {
          "id": "yLJyJqOUtRWRIiby",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9e1726b0-390d-4670-a02f-200deaec2cce",
              "name": "new_user",
              "value": false,
              "type": "boolean"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -660,
        -220
      ],
      "id": "2ae3e4c3-fbf0-495a-8416-8d105630ad4d",
      "name": "Returning User"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "addd42c6-47fc-46f4-8f86-026568373767",
              "name": "new_user",
              "value": true,
              "type": "boolean"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -660,
        260
      ],
      "id": "32b6a565-1576-43aa-898d-91402a531516",
      "name": "New User"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT * FROM ai_agent_support_conversations\nWHERE key = '{{ $json[\"ai-agent-support-conversations-key\"] }}'",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -1640,
        80
      ],
      "id": "e3cd6e10-be10-4109-8099-0cb0fc903533",
      "name": "Postgres - Check Thread",
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "2zMAirXyglayHhyb",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "upsert",
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "list",
          "cachedResultName": "public"
        },
        "table": {
          "__rl": true,
          "value": "ai_agent_support_conversations",
          "mode": "list",
          "cachedResultName": "ai_agent_support_conversations"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "key": "={{ $('Set Calculated Vars').item.json[\"ai-agent-support-conversations-key\"] }}",
            "email": "={{ $('Webhook').item.json.body.client.info.email }}",
            "conversationid": "={{ $('Filter').item.json.body.conversationId }}",
            "threadid": "={{ $json.id }}",
            "source": "={{ $('Set Calculated Vars').item.json['conversation-source'] }}",
            "createdat": "={{ new Date($('Webhook').item.json.body.messages[0].createdAt).toISOString().slice(0, 19).replace('T', ' ') }}"
          },
          "matchingColumns": [
            "key"
          ],
          "schema": [
            {
              "id": "key",
              "displayName": "key",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "email",
              "displayName": "email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "conversationid",
              "displayName": "conversationid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "threadid",
              "displayName": "threadid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "source",
              "displayName": "source",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "createdat",
              "displayName": "createdat",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -880,
        260
      ],
      "id": "0b22611f-c513-45fe-8f8c-eb06067fb17b",
      "name": "Postgres - Save Thread",
      "credentials": {
        "postgres": {
          "id": "2zMAirXyglayHhyb",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        80,
        60
      ],
      "id": "97cb3071-f672-4ac3-8a4c-5073ef2100e5",
      "name": "Wait1",
      "webhookId": "96972318-5236-4627-8189-43298f0ddbf7"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5542161d-4336-4a5a-9e0c-f8437ab96155",
              "name": "counter",
              "value": "={{$json[\"counter\"] ? $json[\"counter\"] + 1 : 1}}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1440,
        -40
      ],
      "id": "f34b5a3e-a544-439e-b1cf-48e0f5313833",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c07bc1fb-de75-4eb9-afff-adcc4b22788d",
              "leftValue": "={{ $json.counter }}",
              "rightValue": 20,
              "operator": {
                "type": "number",
                "operation": "lt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1600,
        0
      ],
      "id": "80f7955b-0f0e-4bda-a33b-05bd9d7db2b8",
      "name": "If2"
    },
    {
      "parameters": {
        "errorMessage": "Too many retries for Run"
      },
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        1820,
        200
      ],
      "id": "5f1b4e2d-515f-40bd-b253-eab90385a09a",
      "name": "Stop and Error"
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "Set Static Vars",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Replace ** with * and JSON.stringify": {
      "main": [
        [
          {
            "node": "Chatra - Post Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Returning User",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Open AI Assistant - Thread Create",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set ThreadId": {
      "main": [
        [
          {
            "node": "Open AI Assistant - Message Create",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Open AI Assistant - Thread Get Response",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Static Vars": {
      "main": [
        [
          {
            "node": "Set Calculated Vars",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Calculated Vars": {
      "main": [
        [
          {
            "node": "Postgres - Check Thread",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Assistant - Request Message": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Open AI Assistant - Thread Create": {
      "main": [
        [
          {
            "node": "Postgres - Save Thread",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Open AI Assistant - Message Create": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Open AI Assistant - Create Run": {
      "main": [
        [
          {
            "node": "Open AI Assistant - Run Check Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Open AI Assistant - Run Check Status": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Open AI Assistant - Thread Get Response": {
      "main": [
        [
          {
            "node": "Replace ** with * and JSON.stringify",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Returning User": {
      "main": [
        [
          {
            "node": "Set ThreadId",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "New User": {
      "main": [
        [
          {
            "node": "Set ThreadId",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres - Check Thread": {
      "main": [
        [
          {
            "node": "AI Assistant - Request Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres - Save Thread": {
      "main": [
        [
          {
            "node": "New User",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Open AI Assistant - Create Run",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Open AI Assistant - Run Check Status",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Stop and Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "8a948c52-bafe-4e0a-8d99-5c404f8e57da",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "7dea66321b4c2d00f456056dec74111cfa19b98c8cde8bfed7341b9d5147730b"
  },
  "id": "YjwcHveMDDdCOVBb",
  "tags": [
    {
      "createdAt": "2025-01-26T09:21:04.473Z",
      "updatedAt": "2025-01-26T09:21:04.473Z",
      "id": "VfpwjMdGODJ1skxz",
      "name": "ai"
    },
    {
      "createdAt": "2025-01-26T09:21:42.206Z",
      "updatedAt": "2025-01-26T09:21:42.206Z",
      "id": "wAuHUcbaDtrFr5wp",
      "name": "webhook"
    }
  ]
}